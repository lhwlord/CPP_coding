0. 각 연산에 대한 큰수연산 모듈 만들기 : 나누기, 나눠지는가, 곱하기, 빼기
1. 범위 내의 소수 제곱수 뽑아내기 : 100만까지만 int로 늘리면서 소수 찾고, 그 제곱수가 최대범위를 벗어나지 않을 때까지 소수 제곱수 후보에 올리기
2. 1번을 체 삼아 거르기 : 범위설정 후 나누기로 들어가야 연산이 줄어든다.



0번 진행방법
큰수 나누기 : 나중가서 필요하다. 밑의 것과 비슷하지만 마지막에 배수만 딱 빼주면 된다. 혹은 전부 합쳐도 되고. 완료.

큰수 나눠지는가 : 나누는 수를 2의 배수 처리하면서 그보다 작아지는 최소값으로 계속 변형하면 된다.
가령 810이 50으로 나눠지는가를 보고 싶으면, 50이 810보다 커질 때까지 2배한다. 그럼 50, 100, 200, 400, 800, 1600이 되는데, 여기서 1600이 810을 넘기므로 800에서 멈춘다.
이후 810에서 800을 뺀다 : 10.
그 다음은 400 - 200 - 100 - 50 순으로 뺄 수 있는지를 계속 보는 것이다. 어차피 한번 넘어간 다음부턴 계속 작은 값이 나오게 되기 때문.
뺄 수 있으면 뺀 뒤에 하위 값으로 넘어가고, 뺄 수 없으면 그냥 하위 값으로 넘긴다.
마지막 단계인 1배수까지 진행시켰으면, 이제 남은 수가 0인지만 보면 끝.
만약 나머지연산이 하고 싶다면 여기서 남은 값을 반환하면 된다.
나눠지는가는 그냥 나누기로 합친다. 나눠놓고 보니 나머지가 0이면 그게 나눠떨어지는 것이므로.

큰수 곱하기 : 전에 배웠던 pqr을 쓰면 편할지도 모른다. 하는방법 : 최대 자리수 구하고, 한쪽이라도 0이면 0 리턴, 그게 아니고 일정 수치 밑이면 통상 곱하기로 리턴, 그것도 아니면 최대 자리수 절반(m) 해서 x는 좌측을 절반자리수만큼 나눈 몫, y는 그 나머지, w는 우측을 절반자리수만큼 나눈 몫, z는 그 나머지. 이후 r = 재귀(x+y,w+z), p = 재귀(x,w), q = 재귀(y,z), 마지막으로 p를 2m만큼 늘리고, r-p-q를 m만큼, q는 그냥, 이 3개를 더해서 리턴.
마지막에 부호를 더해두면 될 것이다. 즉 알맹이 함수는 큰수벡터로만 시행할 수 있도록. 완료

큰수 더하기, 빼기 : 부호화시켜서 한번에 구현했다. 완료

큰수화 하기 : 어렵지 않다. 완료

큰수 쉬프트 : 10배수 곱하기. 얘는 말마따나 뒤에 0을 원하는 만큼 추가하면 그만이다. 완료



1번 진행방법
100만까지의 소수 7만8천개를 뽑아야 한다.
이건 소수를 찾으면서, 또한 소수로 나뉘는지를 검사해야 한다. 다만 그러는 과정 자체는 큰 수로 안해도 된다. 100만까지이니 int 안에서 끝낼 수 있다.
또한 최대범위에 루트를 씌워서 뽑을 소수 개수를 제한하는 방법도 있다.
일단 최대범위 안에 들어가는 한 2는 무조건 소수배열에 넣고, 이후 3부터 최대범위까지 for문 돌리면서(짝수면 당연히 넘겨야 이득) 기존의 소수배열 값들 전부로 목표 값을 나눈 나머지가 다 0인 경우에만 소수배열에 추가시킨다.
이후 그렇게 나온 소수배열을 다시 소수 제곱수 배열에 큰수화 이후 큰수 곱셈으로 집어넣으면 끝.



2번 진행방법
소수 제곱수 배열을 갖고 있을 것이다. 그걸 하나씩 돌면서, 먼저 해당 소수 제곱수로 나눠지는 범위 내 최소값과 최대값을 구한다.(이건 최소값에 나머지연산 후 나눈 수 - 나머지를 더해주고, 최대값에 나머지연산 후 나머지를 뺀 값으로 보정하는 것.) 그러고 나서 둘의 차를 구하고(단 최소값이 더 커지는 경우면 범위가 좁은 것이므로 바로 0으로 처리), 리얼최소~리얼최대 값들 중에서 그 차를 소수 제곱수로 나눈 수 + 1만큼 빼면 된다. 이걸 계속 반복. 이게 왜 되냐면, 소수 제곱수는 겹치지 않기 때문이다.

가령 11부터 20이고 현재 소수 제곱수가 2*2 = 4라면, 11을 4로 나눈 나머지는 3이다. 따라서 4 - 3 = 1만큼을 최소값에 더해서 12를 만들고, 20은 0이므로 0을 빼서 20을 둔다. 20에서 12를 빼면 8이고, 8 / 4 = 2, 2 + 1 = 3. 따라서 20 - 11 + 1 = 10개 중에서 3개를 뺀 7개가 되는 것이다.
계속 진행하자면, 다음은 9이다. 마찬가지로 첫 나머지 2이므로 18이 되는데, 얜 여기서 끝이다. 따라서 18에서 18을 빼면 0이고, 0 / 18 = 0, 0 + 1 = 1. 그러므로 7에서 1을 빼면 6이다.
다음은 25인데, 애초에 얘는 최대값을 벗어났으므로 소수 제곱수 배열에 끼지도 않았을 것이다.
그러므로 11부터 20까지의 제곱ㄴㄴ수는 6개가 있다고 할 수 있다.